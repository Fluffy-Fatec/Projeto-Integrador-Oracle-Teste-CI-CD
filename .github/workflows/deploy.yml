name: Fluffy CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  fluffyapp-CI:
    # Executa o job em um ambiente virtual Ubuntu mais recente
    runs-on: ubuntu-latest

    steps:
    # Faz o checkout do código para o ambiente de execução do GitHub Actions
    - uses: actions/checkout@v3

    # Configura o ambiente Java JDK 11
    - name: Configurar JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    # Armazena em cache as dependências do Maven para acelerar as construções subsequentes
    - name: Cache de pacotes Maven
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # Compila o projeto usando o Maven
    - name: Compilar com Maven
      run: mvn -B package --file backend/pom.xml
       # Executa os testes automatizados
    - name: Executar testes
      run: mvn test --file backend/pom.xml

    # Gera e publica relatórios de cobertura de testes (opcional)
    - name: Gerar relatório de cobertura
      run: mvn test jacoco:report --file backend/pom.xml


  fluffyapp-deploy:
    name: Deploy | Fluffy Backend
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy FluffyApp to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          # Github path
          source: "**"
          # VPS path
          target: "~/fluffyapp"

      - name: Create FluffyApp .env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/fluffyapp
            rm .env
            touch .env
            echo SPRING_LOCAL_PORT=${{ secrets.SPRING_LOCAL_PORT }} >> .env
            echo SPRING_DOCKER_PORT=${{ secrets.SPRING_DOCKER_PORT }} >> .env

      - name: Build and Start Docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/fluffyapp
            docker-compose build --no-cache app
            docker-compose up -d app
# on:
#   workflow_run:
#     workflows: ["Fluffy CD"]
#     types:
#       - completed